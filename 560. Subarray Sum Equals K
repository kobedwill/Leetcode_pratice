Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

A subarray is a contiguous non-empty sequence of elements within an array.
https://www.youtube.com/watch?v=HbbYPQc-Oo4
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int n = nums.size(), count = 0, sum = 0;
        unordered_map<int, int> mp{{0,1}}; // sum - k = 0 --> sum of subarray = 0, which need to be calculated even when there no saving number in map --> 在值為0的map中需初始化一個count 1  
        for(int i = 0; i<n; i++){
            sum+=nums[i];
            count+=mp[sum-k];
            mp[sum]++;
        }
        return count;
    }
};
